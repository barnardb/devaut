#!/bin/bash
# Open the current repository in a browser

set -e
set -u
set -o pipefail

usage() {
    echo "usage: webrepo [--print]"
}

show_help() {
    usage
    cat <<'EOF'

`webrepo` tries to find a URL for the current repository and open it in your browser.

If an HTTP or HTTPS URL is found, it is opened with the `open` command.
Otherwise, an SSH URL is assumed, and a naÃ¯ve transformation is performed, so that
`ssh://git@github.com:barnardb/devaut.git` and `git@github.com:barnardb/devaut.git` become
`https://github.com/barnardb/devaut.git`

If the --print option is sepecified, the URL is printed to stdout instead of opened.
EOF
}

# shellcheck source=SCRIPTDIR/scripting/color.sh
source "$(dirname "${BASH_SOURCE[0]}")/scripting/color.sh"

should_print=false

while (( $# > 0 )); do
    case "$1" in
        --print) should_print=true;;
        -'?' | --help) show_help; exit;;
        --) shift; break;;
        -*) usage_error "unknown option $1" "Use '--' to separate arguments from options";;
        *) break;;
    esac
    shift
done

[ $# -eq 0 ] || usage_error "unexpected arguments: $*"


local_branch="$(git rev-parse --abbrev-ref HEAD)"
remote="$(git config "branch.${local_branch}.remote")"
remote_url="$(git config "remote.${remote}.url")"

process_url() {
    case "${1%:*}" in
        http | https) echo "$1";;
        ssh) process_url "${1#ssh://}";;
        *)  # assume SSH w/o "ssh://"
            host_and_path="${1#*@}"
            process_url "https://${host_and_path%:*}/${host_and_path##*:}"
            ;;
    esac
}

browser_url="$(process_url "${remote_url}")"

if [ "${should_print}" = true ]; then
    echo "${browser_url}"
else
    exec open "${browser_url}"
fi
